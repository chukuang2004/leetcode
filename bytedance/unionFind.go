package main

import (
	"fmt"
)

func findBoss(buf []int, i int) int {
	if buf[i] == i {
		return i
	}

	return findBoss(buf, buf[i])
}

func findCircleNum(M [][]int) int {

	size := len(M)
	buf := make([]int, size)
	for i := 0; i < size; i++ {
		buf[i] = i
	}

	for i := 0; i < len(M); i++ {
		for j := 0; j < len(M[i]); j++ {
			if M[i][j] == 1 {
				a := findBoss(buf, i)
				b := findBoss(buf, j)

				if a != b {
					buf[a] = j
				}
			}
		}
	}

	cnt := 0
	for i := 0; i < size; i++ {
		if buf[i] == i {
			cnt = cnt + 1
		}
	}

	return cnt
}

func main() {

	// src := [][]int{
	// 	{1, 1, 1},
	// 	{1, 1, 0},
	// 	{1, 0, 1}}

	// src := [][]int{
	// 	{1, 0, 0, 0, 0, 0, 0},
	// 	{0, 1, 0, 1, 0, 0, 0},
	// 	{0, 0, 1, 0, 0, 0, 0},
	// 	{0, 1, 0, 1, 0, 0, 0},
	// 	{0, 0, 0, 0, 1, 0, 1},
	// 	{0, 0, 0, 0, 0, 1, 1},
	// 	{0, 0, 0, 0, 1, 1, 1}}

	src := [][]int{
		{1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0},
		{0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0},
		{0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
		{0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0},
		{0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0},
		{0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0},
		{0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0},
		{1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0},
		{0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0},
		{0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0},
		{0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0},
		{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1}}
	ret := findCircleNum(src)
	fmt.Println(ret)
}

// {{1,0,0,0,0,0,0,0,0,1,0,0,0,0,0},
//  {0,1,0,1,0,0,0,0,0,0,0,0,0,1,0},
//  {0,0,1,0,0,0,0,0,0,0,0,0,0,0,0},
//  {0,1,0,1,0,0,0,1,0,0,0,1,0,0,0},
//  {0,0,0,0,1,0,0,0,0,0,0,0,1,0,0},
//  {0,0,0,0,0,1,0,0,0,0,0,0,0,0,0},
//  {0,0,0,0,0,0,1,0,0,0,0,0,0,0,0},
//  {0,0,0,1,0,0,0,1,1,0,0,0,0,0,0},
//  {0,0,0,0,0,0,0,1,1,0,0,0,0,0,0},
//  {1,0,0,0,0,0,0,0,0,1,0,0,0,0,0},
//  {0,0,0,0,0,0,0,0,0,0,1,0,0,0,0},
//  {0,0,0,1,0,0,0,0,0,0,0,1,0,0,0},
//  {0,0,0,0,1,0,0,0,0,0,0,0,1,0,0},
//  {0,1,0,0,0,0,0,0,0,0,0,0,0,1,0},
//  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,1}}
